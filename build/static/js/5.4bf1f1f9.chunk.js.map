{"version":3,"sources":["components/common/formControl/index.js","components/common/formControl/FormControl.module.css","utils/validations.js","components/common/messageForm/MessageForm.jsx","components/common/messageForm/MessageForm.module.css","components/pages/dialogs/DialogsContainer.module.css","components/pages/dialogs/dialog/Dialog.module.css","components/pages/dialogs/dialog/dialogRow/DialogRow.module.css","components/common/messageItem/MessageItem.module.css","components/pages/dialogs/dialogsRow/DialogsRow.module.css","components/common/messageItem/MessageItem.jsx","components/pages/dialogs/dialog/dialogRow/DialogRow.jsx","components/pages/dialogs/dialog/Dialog.jsx","components/pages/dialogs/dialogsRow/DialogsRow.jsx","components/hocs/withAuthRedirect.js","components/pages/dialogs/DialogsContainer.jsx"],"names":["FormControl","ChildElement","React","createElement","props","childTag","input","rest","meta","this","touched","error","hasError","className","s","formControl","Component","Input","Textarea","module","exports","required","value","undefined","reduxForm","form","handleSubmit","onSubmit","component","name","validate","type","MessageItem","author","message","onClick","messageItem","wrapAvatar","href","Avatar","content","text","DialogRow","dialog","messages","interlocutor","dialogElements","map","key","isOwnMessage","dialogRow","Dialog","onMessageFormSubmit","wrapDialog","MessageForm","DialogsRow","dialogsElements","dialogs","id","console","log","wrapDialogsRow","withRouterRedirect","connect","isAuth","auth","to","DialogsContainer","messageText","sendMessage","textareaValue","compose","withAuthRedirect","dialogsReducer"],"mappings":"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","file":"static/js/5.4bf1f1f9.chunk.js","sourcesContent":["import React from 'react';\nimport s from './FormControl.module.css';\n\nclass FormControl extends React.Component {\n    ChildElement = () => React.createElement(this.props.childTag, {\n        ...this.props.input, ...this.props.rest,\n    });\n\n    render() {\n        const { meta } = this.props;\n        const { touched, error } = meta;\n        const hasError = touched && error;\n\n        const ChildElement = this.ChildElement\n\n        return (\n            <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\n                <div>\n                    <ChildElement />\n                </div>\n                <div>\n                    <span>{ hasError && error }</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport const Input = (props) => {\n    return <FormControl { ...props } childTag=\"input\"/>;\n};\n\nexport const Textarea = (props) => {\n    return <FormControl { ...props } childTag=\"textarea\"/>;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__1kqA_\",\"error\":\"FormControl_error__31xnP\"};","export const required = (value) => (value) ? undefined : 'Field is required.';\n","import React from 'react';\nimport s from './MessageForm.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../formControl\";\nimport {required} from \"../../../utils/validations\";\n\nconst MessageForm = ({handleSubmit, onSubmit}) => {\n    return (\n        <form\n            className={s.form}\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <div>\n                <Field\n                    component={Textarea}\n                    name=\"messageText\"\n                    validate={[required]}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">Send</button>\n            </div>\n        </form>\n    );\n};\n\nexport default reduxForm({\n    form: 'message',\n})(MessageForm);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MessageForm_form__1Or3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogsContainer_dialogs__3rbrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapDialog\":\"Dialog_wrapDialog__-NIrX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageItem\":\"DialogRow_messageItem__1uBOI\",\"text\":\"DialogRow_text__ySo1h\",\"name\":\"DialogRow_name__1l2A6\",\"author\":\"DialogRow_author__1anD1\",\"wrapAvatar\":\"DialogRow_wrapAvatar__1tzTx\",\"content\":\"DialogRow_content__13J40\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageItem\":\"MessageItem_messageItem___5K7D\",\"text\":\"MessageItem_text__3AvQO\",\"name\":\"MessageItem_name__26KHh\",\"author\":\"MessageItem_author__2ncYp\",\"wrapAvatar\":\"MessageItem_wrapAvatar__p7XTL\",\"content\":\"MessageItem_content__3nkcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapDialogsRow\":\"DialogsRow_wrapDialogsRow__1ljLy\"};","import React from 'react';\nimport s from './MessageItem.module.css';\nimport Avatar from \"../avatar/Avatar\";\n\nconst MessageItem = ({author, message, onClick}) => {\n    return (\n        <div\n            className={s.messageItem}\n            onClick={onClick}\n        >\n            <div className={s.wrapAvatar}>\n                <a href=\"#!\">\n                    <Avatar/>\n                </a>\n            </div>\n            <div className={s.content}>\n                <div className={s.text}>\n                    <a href=\"#!\">\n                        <div className={s.name}>\n                            {author}\n                        </div>\n                    </a>\n                    <div className={s.text}>\n                        {message}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MessageItem;\n","import React from 'react';\nimport s from './DialogRow.module.css';\nimport MessageItem from \"../../../../common/messageItem/MessageItem\";\n\nconst DialogRow = ({dialog}) => {\n    const {\n        messages,\n        interlocutor,\n    } = dialog;\n\n    const dialogElements = messages.map((messageItem, key) => {\n        const {\n            author,\n            message,\n        } = messageItem;\n        const isOwnMessage = (interlocutor !== author);\n\n        return (\n            <li key={key} className={(isOwnMessage) ? s.author : null}>\n                <MessageItem\n                    author={author}\n                    message={message}\n                />\n            </li>\n        );\n    });\n\n    return (\n        <div className={s.dialogRow}>\n            <ul>\n                { dialogElements }\n            </ul>\n        </div>\n    );\n};\n\nexport default DialogRow;\n","import React from 'react';\n\nimport s from './Dialog.module.css';\n\nimport DialogRow from \"./dialogRow/DialogRow\";\nimport MessageForm from \"../../../common/messageForm/MessageForm\";\n\nconst Dialog = ({dialog, onMessageFormSubmit}) => {\n    const {interlocutor} = dialog;\n\n    return (\n        <div className={s.wrapDialog}>\n            <h3>Dialog with {interlocutor}</h3>\n            <DialogRow\n                dialog={dialog}\n            />\n            <MessageForm\n                onSubmit={onMessageFormSubmit}\n            />\n        </div>\n    );\n};\n\nexport default Dialog;\n","import React from 'react';\nimport s from './DialogsRow.module.css';\nimport MessageItem from \"../../../common/messageItem/MessageItem\";\n\nconst DialogsRow = ({dialogs}) => {\n    const dialogsElements = dialogs.map(({name, message, id}) => (\n        <li key={id}>\n            <MessageItem\n                author={name}\n                message={message}\n                onClick={() => {\n                    console.log(id)\n                }}\n            />\n        </li>\n    ));\n\n    return (\n        <div className={s.wrapDialogsRow}>\n            <h3>Dialogs</h3>\n            <ul>\n                { dialogsElements }\n            </ul>\n        </div>\n    );\n};\n\nexport default DialogsRow;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\nconst withRouterRedirect = (Component) => {\n    const mapStateToProps = ({auth}) => ({\n        isAuth: auth.isAuth,\n    });\n\n    return connect(mapStateToProps, {})((props) => {\n        if( !props.isAuth ) return <Redirect to=\"/login\"/>\n\n        return <Component/>\n    });\n};\n\nexport default withRouterRedirect;\n","import React from 'react';\nimport s from './DialogsContainer.module.css';\nimport Dialog from \"./dialog/Dialog\";\nimport {sendMessage} from \"../../../redux/reducers/dialogsReducer\";\nimport {connect} from \"react-redux\";\nimport DialogsRow from \"./dialogsRow/DialogsRow\";\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass DialogsContainer extends React.Component {\n    onMessageFormSubmit = ({messageText}) => {\n        this.props.sendMessage(messageText);\n    }\n\n    render() {\n        const {\n            dialog,\n            dialogs,\n            textareaValue,\n        } = this.props;\n\n        return (\n            <div className={s.dialogs}>\n                <DialogsRow dialogs={dialogs}/>\n                <Dialog\n                    dialog={dialog}\n                    textareaValue={textareaValue}\n                    onMessageFormSubmit={this.onMessageFormSubmit}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({dialogsReducer}) => ({\n    dialogs: dialogsReducer.dialogs,\n    dialog: dialogsReducer.dialog,\n});\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {\n        sendMessage,\n    })\n)(DialogsContainer);\n"],"sourceRoot":""}