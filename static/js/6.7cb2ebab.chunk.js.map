{"version":3,"sources":["components/common/formControl/FormControl.tsx","components/common/formControl/FormControl.module.css","utils/validations.ts","components/pages/login/loginForm/LoginForm.module.css","components/pages/login/LoginContainer.module.css","components/pages/login/loginForm/LoginForm.tsx","components/pages/login/LoginContainer.tsx"],"names":["FormControl","ChildElement","props","input","rest","childTag","meta","React","createElement","this","touched","error","hasError","className","s","formControl","Component","Input","Textarea","module","exports","required","value","undefined","require","reduxForm","form","handleSubmit","onFormSubmit","captchaUrl","onSubmit","htmlFor","Field","name","component","validate","type","src","alt","errorMessage","mapDispatch","login","connector","connect","security","LoginContainer","email","password","rememberMe","captcha"],"mappings":"kQAUMA,E,4MAEFC,aAAe,WAAO,IAAD,EAC0B,EAAKC,MAAxCC,EADS,EACTA,MAA0BC,GADjB,EACFC,SADE,EACQC,KADR,4CAGjB,OAAOC,IAAMC,cAAc,EAAKN,MAAMG,SAA/B,2BACAF,GAAUC,K,uDAIX,IACEE,EAASG,KAAKP,MAAdI,KACAI,EAAmBJ,EAAnBI,QAASC,EAAUL,EAAVK,MACXC,EAAWF,GAAWC,EAEtBV,EAAeQ,KAAKR,aAE1B,OACI,yBAAKY,UAAS,UAAKC,IAAEC,YAAP,YAAsBH,EAAWE,IAAEH,MAAQ,KACrD,6BACI,kBAACV,EAAD,OAEJ,6BACI,8BAAQW,GAAYD,S,GAvBdJ,IAAMS,WA8BnBC,EAAQ,SAACf,GAClB,OAAO,kBAACF,EAAD,iBAAkBE,EAAlB,CAA0BG,SAAS,YAGjCa,EAAW,SAAChB,GACrB,OAAO,kBAACF,EAAD,iBAAkBE,EAAlB,CAA0BG,SAAS,gB,oBC5C9Cc,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,iCCCzE,kCAAO,IAAMC,EAAsB,SAACC,GAAD,OAAYA,OAASC,EAAY,uB,oBCDpEJ,EAAOC,QAAU,CAAC,aAAe,kC,oBCAjCD,EAAOC,QAAU,CAAC,QAAU,kC,gICKxBN,EAAIU,EAAQ,KAuDDC,cAA2B,CAClCC,KAAM,SADCD,EAhDyD,SAACvB,GAAW,IACxEyB,EAAmDzB,EAAnDyB,aAAcC,EAAqC1B,EAArC0B,aAAcjB,EAAuBT,EAAvBS,MAAOkB,EAAgB3B,EAAhB2B,WAC3C,OACI,0BAAMC,SAAUH,EAAaC,IACzB,2BAAOG,QAAQ,aAAf,SACA,6BACI,kBAACC,EAAA,EAAD,CACIC,KAAK,QACLC,UAAWjB,IACXkB,SAAU,CAACd,KACXe,KAAK,WAGb,2BAAOL,QAAQ,SAAf,YACA,6BACI,kBAACC,EAAA,EAAD,CACIC,KAAK,WACLC,UAAWjB,IACXkB,SAAU,CAACd,KACXe,KAAK,cAGb,6BACI,kBAACJ,EAAA,EAAD,CACIC,KAAK,aACLC,UAAU,QACVE,KAAK,aAJb,gBAOEP,GAAc,6BACZ,yBAAKQ,IAAKR,EAAYS,IAAI,kBAC1B,kBAACN,EAAA,EAAD,CACIC,KAAK,UACLC,UAAWjB,IACXkB,SAAU,CAACd,KACXe,KAAK,UAGb,yBAAKvB,UAAWC,EAAEyB,cACZ5B,GAAS,8BAAQA,IAEvB,6BACI,4BAAQyB,KAAK,UAAb,e,gBCzCVI,GALEhB,EAAQ,KAKI,CAChBiB,YAEEC,EAAYC,aAND,SAAC,GAAD,MAA+B,CAC5Cd,WADa,EAAEe,SACMf,cAKWW,GAI9BK,E,4MACFjB,aAAe,YAAoE,IAAjEkB,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,SAAyD,IAA/CC,kBAA+C,SAA3BC,EAA2B,EAA3BA,QACnD,EAAK/C,MAAMuC,MAAM,CACbK,QAAOC,WAAUC,aAAYC,a,uDAI3B,IACEpB,EAAepB,KAAKP,MAApB2B,WAER,OACI,6BACI,qCACA,kBAAC,EAAD,CACIA,WAAYA,EACZD,aAAcnB,KAAKmB,oB,GAfVrB,IAAMS,WAsBpB0B,YAAUG","file":"static/js/6.7cb2ebab.chunk.js","sourcesContent":["import React from 'react'\nimport s from './FormControl.module.css'\nimport {WrappedFieldProps} from \"redux-form\"\n\n// If necessary use type for field generic attrs - GenericFieldHTMLAttributes\n\ntype FormControlProps = WrappedFieldProps & {\n    childTag: string\n}\n\nclass FormControl extends React.Component<FormControlProps> {\n    // Is here to avoid rerender of ChildElement\n    ChildElement = () => {\n        const { input, childTag, meta, ...rest } = this.props\n\n        return React.createElement(this.props.childTag, {\n            ...input, ...rest,\n        })\n    }\n\n    render() {\n        const { meta } = this.props\n        const { touched, error } = meta\n        const hasError = touched && error\n\n        const ChildElement = this.ChildElement\n\n        return (\n            <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\n                <div>\n                    <ChildElement />\n                </div>\n                <div>\n                    <span>{ hasError && error }</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport const Input = (props: WrappedFieldProps) => {\n    return <FormControl { ...props } childTag=\"input\"/>\n}\n\nexport const Textarea = (props: WrappedFieldProps) => {\n    return <FormControl { ...props } childTag=\"textarea\"/>\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__1kqA_\",\"error\":\"FormControl_error__31xnP\"};","import {Validator} from \"../models/common\";\n\nexport const required: Validator = (value) => (value) ? undefined : 'Field is required.';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"LoginForm_errorMessage__2JFqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"LoginContainer_profile__12pJ3\"};","import React, {FC} from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport { Input } from \"../../../common/formControl/FormControl\";\nimport {required} from \"../../../../utils/validations\";\n\n// Used required to not to create declaration file for css module\nlet s = require('./LoginForm.module.css');\n\ntype CustomProps =  {\n    onFormSubmit: (...args: any) => void\n    captchaUrl: string | null\n}\n\nconst LoginForm: FC<CustomProps & InjectedFormProps<{}, CustomProps>> = (props) => {\n    const { handleSubmit, onFormSubmit, error, captchaUrl, } = props;\n    return (\n        <form onSubmit={handleSubmit(onFormSubmit)}>\n            <label htmlFor=\"firstName\">Login</label>\n            <div>\n                <Field\n                    name=\"email\"\n                    component={Input}\n                    validate={[required]}\n                    type=\"email\"\n                />\n            </div>\n            <label htmlFor=\"email\">Password</label>\n            <div>\n                <Field\n                    name=\"password\"\n                    component={Input}\n                    validate={[required]}\n                    type=\"password\"\n                />\n            </div>\n            <div>\n                <Field\n                    name=\"rememberMe\"\n                    component=\"input\"\n                    type=\"checkbox\"\n                /> Remember me\n            </div>\n            { captchaUrl && <div>\n                <img src={captchaUrl} alt=\"Captcha image\"/>\n                <Field\n                    name=\"captcha\"\n                    component={Input}\n                    validate={[required]}\n                    type=\"text\"\n                />\n            </div> }\n            <div className={s.errorMessage}>\n                { error && <span>{ error }</span> }\n            </div>\n            <div>\n                <button type=\"submit\">Submit</button>\n            </div>\n        </form>\n    );\n};\n\nexport default reduxForm<{}, CustomProps>({\n        form: 'login',\n    })(LoginForm);\n","import React from 'react';\n\nimport LoginForm from \"./loginForm/LoginForm\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport {login} from \"../../../redux/reducers/auth\";\nimport {Credentials} from \"../../../models/auth\";\nimport {AppStateType} from \"../../../redux/store\";\n\n// Used required to not to create declaration file for css module\nlet s = require('./LoginContainer.module.css');\n\nconst mapState = ({security}: AppStateType) => ({\n    captchaUrl: security.captchaUrl,\n})\nconst mapDispatch = {\n    login,\n}\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {}\n\nclass LoginContainer extends React.Component<Props> {\n    onFormSubmit = ({ email, password, rememberMe = false, captcha }: Credentials) => {\n        this.props.login({\n            email, password, rememberMe, captcha,\n        });\n    }\n\n    render() {\n        const { captchaUrl } = this.props;\n\n        return (\n            <div>\n                <h2>Login</h2>\n                <LoginForm\n                    captchaUrl={captchaUrl}\n                    onFormSubmit={this.onFormSubmit}\n                />\n            </div>\n        );\n    }\n}\n\nexport default connector(LoginContainer);\n"],"sourceRoot":""}