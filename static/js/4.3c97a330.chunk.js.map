{"version":3,"sources":["components/common/formControl/FormControl.tsx","components/common/formControl/FormControl.module.css","utils/validations.ts","components/common/messageForm/MessageForm.tsx","components/common/messageForm/MessageForm.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/pages/profile/ProfileContainer.module.css","components/pages/profile/MyPosts/MyPostsContainer.module.css","components/pages/profile/MyPosts/postsRow/PostsRow.module.css","components/common/postItem/PostItem.module.css","components/pages/profile/profileInfo/ProfileInfo.module.css","components/pages/profile/wallpaper/Wallpaper.module.css","assets/images/wallpaper.jpg","components/common/postItem/PostItem.tsx","components/pages/profile/MyPosts/postsRow/PostsRow.tsx","components/pages/profile/MyPosts/MyPostsContainer.tsx","redux/selectors/profile.ts","components/pages/profile/profileInfo/editableLabel/EditableLabel.tsx","components/pages/profile/profileInfo/ProfileInfo.tsx","components/pages/profile/wallpaper/Wallpaper.tsx","components/pages/profile/ProfileContainer.tsx"],"names":["FormControl","ChildElement","props","input","rest","childTag","meta","React","createElement","this","touched","error","hasError","className","s","formControl","Component","Input","Textarea","module","exports","required","value","undefined","reduxForm","form","handleSubmit","onSubmit","component","name","validate","type","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","PostItem","author","message","likesCount","post","wrapAvatar","Avatar","image","content","text","actions","PostsRow","postsElements","posts","map","key","rowPosts","mapDispatch","addPost","connector","connect","state","profileReducer","onAddPostFormSubmit","messageText","myPosts","MessageForm","captchaUrl","EditableLabel","label","updateLabel","beforeLabel","canEdit","useState","isEditModeActive","setIsEditModeActive","labelValueTemp","setLabelValueTemp","useEffect","String","onClick","onBlur","onChange","target","autoFocus","ProfileInfo","profile","status","isOwner","updateStatus","updateAvatar","updateProfile","PreLoader","photos","fullName","aboutMe","lookingForAJobDescription","lookingForAJob","contacts","avatar","large","small","onProfileInfoChange","newValue","currentKeyValue","isTheSameAsStrings","contactElements","keys","index","onContactsChange","profileInfo","files","wrapInfo","Wallpaper","wallpaper","src","alt","setUserProfile","fetchProfile","fetchStatus","currentUserId","getCurrentUserId","ProfileContainer","userId","match","params","Number","MyPostsContainer","withRouter"],"mappings":"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","file":"static/js/4.3c97a330.chunk.js","sourcesContent":["import React from 'react'\nimport s from './FormControl.module.css'\nimport {WrappedFieldProps} from \"redux-form\"\n\n// If necessary use type for field generic attrs - GenericFieldHTMLAttributes\n\ntype FormControlProps = WrappedFieldProps & {\n    childTag: string\n}\n\nclass FormControl extends React.Component<FormControlProps> {\n    // Is here to avoid rerender of ChildElement\n    ChildElement = () => {\n        const { input, childTag, meta, ...rest } = this.props\n\n        return React.createElement(this.props.childTag, {\n            ...input, ...rest,\n        })\n    }\n\n    render() {\n        const { meta } = this.props\n        const { touched, error } = meta\n        const hasError = touched && error\n\n        const ChildElement = this.ChildElement\n\n        return (\n            <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\n                <div>\n                    <ChildElement />\n                </div>\n                <div>\n                    <span>{ hasError && error }</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport const Input = (props: WrappedFieldProps) => {\n    return <FormControl { ...props } childTag=\"input\"/>\n}\n\nexport const Textarea = (props: WrappedFieldProps) => {\n    return <FormControl { ...props } childTag=\"textarea\"/>\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__1kqA_\",\"error\":\"FormControl_error__31xnP\"};","import {Validator} from \"../models/common\";\n\nexport const required: Validator = (value) => (value) ? undefined : 'Field is required.';\n","import React, {FC} from 'react'\nimport s from './MessageForm.module.css'\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\"\nimport {Textarea} from \"../formControl/FormControl\"\nimport {required} from \"../../../utils/validations\"\n\ntype CustomProps =  {\n    onSubmit: ({messageText}: any) => void\n    captchaUrl: string | null\n}\n\nconst MessageForm: FC<CustomProps & InjectedFormProps<{}, CustomProps>> = ({handleSubmit, onSubmit}) => {\n    return (\n        <form\n            className={s.form}\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <div>\n                <Field\n                    component={Textarea}\n                    name=\"messageText\"\n                    validate={[required]}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">Send</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm<{}, CustomProps>({\n    form: 'message',\n})(MessageForm)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MessageForm_form__1Or3f\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileContainer_profile__2rs0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPostsContainer_myPosts__1UP-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"PostsRow_post__h7-rA\",\"text\":\"PostsRow_text__8Tmui\",\"name\":\"PostsRow_name__WK6Vh\",\"wrapAvatar\":\"PostsRow_wrapAvatar__iwE8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"PostItem_post__37u_R\",\"wrapAvatar\":\"PostItem_wrapAvatar__Q1HaT\",\"text\":\"PostItem_text__3Cj95\",\"name\":\"PostItem_name__2NjH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2jsTT\",\"wrapInfo\":\"ProfileInfo_wrapInfo__3CZXa\",\"wrapAvatar\":\"ProfileInfo_wrapAvatar__L8OEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallpaper\":\"Wallpaper_wallpaper__1V-TE\"};","module.exports = __webpack_public_path__ + \"static/media/wallpaper.ee722eb1.jpg\";","import React, {FC} from 'react'\nimport s from './PostItem.module.css'\nimport Avatar from '../avatar/Avatar'\nimport {PostType} from '../../../models/profile'\n\ntype Props = PostType & {}\n\nconst PostItem: FC<Props> = ({author, message, likesCount}) => {\n    return (\n        <div className={s.post}>\n            <div className={s.wrapAvatar}>\n                <Avatar image={null}/>\n            </div>\n            <div className={s.content}>\n                <div className={s.text}>\n                    <div className={s.name}>\n                        {author}\n                    </div>\n                    <div className={s.text}>\n                        {message}\n                    </div>\n                </div>\n                <div className={s.actions}>\n                    <span>{ likesCount }</span>\n                    <button>Like</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PostItem\n","import React, {FC} from 'react'\nimport s from './PostsRow.module.css'\nimport PostItem from '../../../../common/postItem/PostItem'\nimport {PostsRowType} from '../../../../../models/profile'\n\ntype Props = {\n    posts: PostsRowType\n}\n\nconst PostsRow: FC<Props> = ({posts}) => {\n    const postsElements = posts.map(({message, author, likesCount}, key) => (\n        <PostItem\n            key={key}\n            author={author}\n            message={message}\n            likesCount={likesCount}\n        />\n    ))\n\n    return (\n        <div className={s.rowPosts}>\n            { postsElements }\n        </div>\n    )\n}\n\nexport default PostsRow\n","import React from 'react'\nimport {addPost} from '../../../../redux/reducers/profileReducer'\nimport {connect, ConnectedProps} from 'react-redux'\nimport s from './MyPostsContainer.module.css'\nimport MessageForm from '../../../common/messageForm/MessageForm'\nimport PostsRow from './postsRow/PostsRow'\nimport {AppStateType} from '../../../../redux/store'\nimport {getPosts} from '../../../../redux/selectors/profile'\n\nconst mapState = (state: AppStateType) => ({\n    posts: getPosts(state),\n})\nconst mapDispatch = {\n    addPost,\n}\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {}\n\nclass _MyPostsContainer extends React.Component<Props> {\n    onAddPostFormSubmit = ({messageText}: any) => {\n        this.props.addPost(messageText)\n    }\n\n    render() {\n        const { posts } = this.props\n\n        return (\n            <div className={s.myPosts}>\n                <h3>My posts</h3>\n                <MessageForm\n                    captchaUrl={null}\n                    onSubmit={this.onAddPostFormSubmit}\n                />\n                <PostsRow posts={posts}/>\n            </div>\n        )\n    }\n}\n\nexport default connector(_MyPostsContainer)\n","import {AppStateType} from \"../store\";\n\nexport const getProfile = ({profileReducer}: AppStateType) => profileReducer.profile;\nexport const getStatus = ({profileReducer}: AppStateType) => profileReducer.status;\nexport const getPosts = ({profileReducer}: AppStateType) => profileReducer.posts;\n","import React, {FC, useEffect, useState} from 'react'\nimport s from './EditableLabel.module.css'\n\ntype Props = {\n    label: string | null\n    updateLabel: (label: string) => void\n    beforeLabel?: string\n    canEdit?: boolean\n}\n\nconst EditableLabel: FC<Props> = (props) => {\n    const { label, updateLabel, beforeLabel = '', canEdit = true } = props\n    const [ isEditModeActive, setIsEditModeActive ] = useState(false)\n    const [ labelValueTemp, setLabelValueTemp ] = useState('')\n\n    useEffect(() => {\n        setLabelValueTemp(String(label))\n    }, [label])\n\n    const activateEditMode = () => {\n        setIsEditModeActive(true)\n    }\n    const deactivateEditMode = () => {\n        setIsEditModeActive(false)\n    }\n    const onInputChange = ({target}: React.ChangeEvent<HTMLInputElement>) => {\n        setLabelValueTemp(target.value)\n    }\n    const onInputBlur = () => {\n        deactivateEditMode()\n        updateLabel(labelValueTemp)\n    }\n\n    return (\n        <div>\n            <b>{ beforeLabel && `${beforeLabel}: ` }</b>\n            { !isEditModeActive &&\n                <span onClick={canEdit ? activateEditMode : () => {}}>{ label || 'empty' }</span>\n            }\n            { isEditModeActive && canEdit &&\n                <div>\n                    <input\n                        onBlur={onInputBlur}\n                        onChange={onInputChange}\n                        type='text'\n                        value={labelValueTemp}\n                        autoFocus={true}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default EditableLabel\n","import React, {FC} from 'react'\nimport s from './ProfileInfo.module.css'\nimport PreLoader from '../../../common/preLoader/PreLoader'\nimport Avatar from '../../../common/avatar/Avatar'\nimport EditableLabel from './editableLabel/EditableLabel'\nimport {isTheSameAsStrings} from '../../../../utils/helpers'\nimport {\n    ContactsType,\n    ProfileInfoType,\n    ProfileStatusResponseType,\n    ProfileType\n} from \"../../../../models/profile\";\n\ntype Props = {\n    profile: ProfileType\n    status: ProfileStatusResponseType\n    isOwner: boolean\n    updateStatus: () => void\n    updateAvatar: (file: File) => void\n    updateProfile: (profile: ProfileInfoType) => void\n}\n\nconst ProfileInfo: FC<Props> = ({profile, status, isOwner,\n                                    updateStatus, updateAvatar, updateProfile}) => {\n    if ( !profile ) { return <PreLoader/> }\n\n    const { photos, fullName, aboutMe, lookingForAJobDescription,\n        lookingForAJob, contacts, } = profile\n    let avatar = photos.large || photos.small\n\n    const onAvatarChange = ({target:{files}}: React.ChangeEvent<HTMLInputElement>) => {\n        files && updateAvatar(files[0])\n    }\n    const onProfileInfoChange = (key: keyof ProfileType, newValue: string) => {\n        const currentKeyValue = profile[key]\n\n        if( !isTheSameAsStrings(currentKeyValue, newValue) ) {\n            updateProfile({\n                ...profile,\n                [key]: newValue,\n            })\n        }\n    }\n    const onContactsChange = (key: keyof ContactsType, newValue: string) => {\n        const currentKeyValue = profile.contacts[key]\n\n        if( !isTheSameAsStrings(currentKeyValue, newValue) ) {\n            updateProfile({\n                ...profile,\n                contacts: {\n                    ...profile.contacts,\n                    [key]: newValue,\n                },\n            })\n        }\n    }\n\n    const contactElements = Object.keys(contacts).map((key, index) => {\n        return (\n            <li key={index}>\n                <EditableLabel\n                    canEdit={isOwner}\n                    beforeLabel={key}\n                    label={contacts[key as keyof ContactsType]}\n                    updateLabel={(newValue) => {\n                        onContactsChange(key as keyof ContactsType, newValue)\n                    }}\n                />\n            </li>\n        )\n    })\n\n    return (\n        <div className={s.profileInfo}>\n            <div className={s.wrapAvatar}>\n                <Avatar image={avatar} />\n            </div>\n            { isOwner && <input type='file' onChange={onAvatarChange}/> }\n            <div className={s.wrapInfo}>\n                <h3>{ fullName }</h3>\n                <EditableLabel\n                    canEdit={isOwner}\n                    beforeLabel='About me'\n                    label={aboutMe}\n                    updateLabel={(newValue) => { onProfileInfoChange('aboutMe', newValue) }}\n                />\n                <EditableLabel\n                    canEdit={isOwner}\n                    beforeLabel='Status'\n                    label={status}\n                    updateLabel={updateStatus}\n                />\n                { lookingForAJob && <EditableLabel\n                    canEdit={isOwner}\n                    beforeLabel='Looking for a job'\n                    label={lookingForAJobDescription}\n                    updateLabel={(newValue) => { onProfileInfoChange('lookingForAJobDescription', newValue) }}\n                />}\n                <ul>\n                    { contactElements }\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo\n","import React, {FC} from 'react'\nimport s from './Wallpaper.module.css'\nimport wallpaper from '../../../../assets/images/wallpaper.jpg'\n\nconst Wallpaper: FC = () => {\n    return (\n        <div className={s.wallpaper}>\n            <img\n                src={wallpaper}\n                alt='Wallpaper'\n            />\n        </div>\n    )\n}\n\nexport default Wallpaper\n","import React from 'react'\nimport s from './ProfileContainer.module.css'\n\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport ProfileInfo from './profileInfo/ProfileInfo'\nimport Wallpaper from './wallpaper/Wallpaper'\nimport {connect, ConnectedProps} from 'react-redux'\nimport {\n    setUserProfile,\n    fetchProfile,\n    fetchStatus,\n    updateStatus, updateAvatar, updateProfile,\n} from '../../../redux/reducers/profileReducer'\nimport {withRouter, RouteComponentProps} from 'react-router-dom'\nimport {getProfile, getStatus} from '../../../redux/selectors/profile'\nimport {getCurrentUserId} from '../../../redux/selectors/auth'\nimport {AppStateType} from \"../../../redux/store\";\n\nconst mapState = (state: AppStateType) => ({\n    profile: getProfile(state),\n    status: getStatus(state),\n    currentUserId: getCurrentUserId(state),\n})\nconst mapDispatch = {\n    setUserProfile,\n    fetchProfile,\n    fetchStatus,\n    updateStatus,\n    updateAvatar,\n    updateProfile,\n}\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\ntype PathParamsType = {\n    userId?: string | undefined,\n}\n\ntype Props = PropsFromRedux & RouteComponentProps<PathParamsType> & {}\n\nclass ProfileContainer extends React.Component<Props> {\n    componentDidMount() {\n        const userId = this.props.match.params.userId || 8364\n\n        this.props.fetchProfile(userId)\n        this.props.fetchStatus(userId)\n    }\n\n    render() {\n        const {\n            profile,\n            updateStatus,\n            status,\n            updateAvatar,\n            currentUserId,\n            updateProfile,\n        } = this.props\n        const isOwner = Number(this.props.match.params.userId) === currentUserId\n\n        return (\n            <main className={s.profile}>\n                <Wallpaper/>\n                <div className={s.profileInfo}>\n                    <ProfileInfo\n                        profile={profile}\n                        status={status}\n                        updateStatus={updateStatus}\n                        updateAvatar={updateAvatar}\n                        isOwner={isOwner}\n                        updateProfile={updateProfile}\n                    />\n                    <MyPostsContainer/>\n                </div>\n            </main>\n        )\n    }\n}\n\nexport default connector(withRouter(ProfileContainer))\n"],"sourceRoot":""}